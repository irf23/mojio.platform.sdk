<Page
    x:Class="Mojio.Platform.SDK.SampleApp.Pages.Dashboard"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Mojio.Platform.SDK.SampleApp.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Mojio.Platform.SDK.SampleApp.Controls"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Theme/Mojio/Custom.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <RelativePanel Background="{ThemeResource MojioBackgroundColor}"
                   VerticalAlignment="Stretch"
                   HorizontalAlignment="Stretch">
        <Button Name="SplitViewButton" Background="Transparent" Padding="0,-6" Margin="12"
                Click="SplitViewButton_Click">
            <FontIcon FontFamily="{ThemeResource ContentControlThemeFontFamily}" Glyph="&#x2261;" FontSize="32"
                      Margin="0,-8,0,0" />
        </Button>

        <TextBlock Style="{ThemeResource MojioSubheaderTextBlockStyle}" Text="Mojio"
                   RelativePanel.RightOf="SplitViewButton" />

        <SplitView x:Name="MySplitView" Style="{ThemeResource MojioDashboardSplitView}"
                   VerticalAlignment="Stretch"
                   VerticalContentAlignment="Top"
                   HorizontalAlignment="Stretch"
                   RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True"
                   RelativePanel.Below="SplitViewButton">
            <SplitView.Pane>
                <RelativePanel Style="{ThemeResource MojioNavigationRelativePanel}" VerticalAlignment="Stretch"
                               HorizontalAlignment="Stretch">
                    <!--navigation-->
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <!--content-->
                        <Image Source="{Binding Me.Image.Thumbnail}" MaxWidth="75" Grid.Row="0" Grid.Column="0"
                               Grid.ColumnSpan="2" />
                        <TextBlock Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0" Text="{Binding Me.UserName}"
                                   Style="{ThemeResource MojioBodyTextBlockStyle}" />

                        <Button Grid.Row="2" Command="{Binding LogoutCommand}" Grid.ColumnSpan="2" Grid.Column="0"
                                Content="Logout" Margin="0,50,0,0" />
                    </Grid>
                </RelativePanel>
            </SplitView.Pane>
            <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto"
                          HorizontalScrollBarVisibility="Disabled" HorizontalScrollMode="Disabled">
                <RelativePanel Padding="25">
                    <!--content-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="500"></RowDefinition>
                            <RowDefinition ></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="400" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <controls:VehicleMap x:Name="VehiclesMap" Grid.Row="0" Grid.Column="0" />
                        <controls:ActivityStream Grid.ColumnSpan="2" x:Name="UserStreamControl"
                                                 Grid.Row="1" Grid.Column="0"
                                                 ></controls:ActivityStream>
                    </Grid>
                </RelativePanel>
            </ScrollViewer>
        </SplitView>

        <!-- Responsive VisualStates -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Widest possible layout moves some elements around to optimize for more available width
                        and keeps SplitView pane always showing inline -->
                        <Setter Target="MySplitView.DisplayMode" Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="True" />
                        <Setter Target="BackgroundCombo.(RelativePanel.RightOf)" Value="BackgroundImage" />
                        <Setter Target="BackgroundCombo.(RelativePanel.AlignTopWith)" Value="BackgroundImage" />
                        <Setter Target="BackgroundCombo.(RelativePanel.AlignLeftWith)" Value="FitCombo" />
                        <Setter Target="PictureLabel.(RelativePanel.Below)" Value="BackgroundImage" />
                        <Setter Target="FitCombo.(RelativePanel.RightOf)" Value="PicturesPanel" />
                        <Setter Target="FitCombo.(RelativePanel.AlignTopWith)" Value="PictureLabel" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=548 and <720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="548" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For intermediate window widths as well as most phones on landscape orientation,
                        this state keeps primary layout narrow while showing the splitview pane to take advantage of more available width than narrow layout -->
                        <Setter Target="MySplitView.DisplayMode" Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="True" />
                        <Setter Target="BackgroundCombo.(RelativePanel.Below)" Value="BackgroundImage" />
                        <Setter Target="PictureLabel.(RelativePanel.Below)" Value="BackgroundCombo" />
                        <Setter Target="FitCombo.(RelativePanel.Below)" Value="BrowseButton" />
                        <Setter Target="Instructions.(RelativePanel.Below)" Value="FitCombo" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=0 and <548 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For the most narrow windows and phones in portrait orientation, this state collapses the SplitView pane into overlay mode
                        and adds dynamic RelativePanel constraints that puts all elements stacked below each other -->
                        <Setter Target="MySplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="False" />
                        <Setter Target="BackgroundCombo.(RelativePanel.Below)" Value="BackgroundImage" />
                        <Setter Target="PictureLabel.(RelativePanel.Below)" Value="BackgroundCombo" />
                        <Setter Target="FitCombo.(RelativePanel.Below)" Value="BrowseButton" />
                        <Setter Target="Instructions.(RelativePanel.Below)" Value="FitCombo" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>